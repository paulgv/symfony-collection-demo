{% extends 'FuzAppBundle::layout.html.twig' %}

{% block extra_js %}
    <script src="{{ asset('bundles/fuzapp/js/collection/jquery.collection.js') }}"></script>
{% endblock %}

{% block title %}Advanced usage: custom form theme{% endblock %}

{% block body %}

    <h2>{{ block('title') }}</h2>

    <p>
        A button is no more than anything containing <code>collection-up</code>, <code>collection-down</code>, <code>collection-add</code>
        or <code>collection-remove</code> classes.
    </p>

    <p>
       So you can customize buttons by creating a form theme for the form type that will be used inside the collection.
    </p>

    <p>
        There is only 1 limit: if you're customizing the native <code>collection</code> theme, you should put collection elements in a div one level
        deeper than the collection's root and no more. This is because the plugin uses <code>$('#collection').find('&gt; div');</code> to find collection's
        elements. If you feel that the <code>&gt; div</code> selector should be customizable in a plugin option, please open an issue on Github.
    </p>

    {{
        github([
            'Controller/AdvancedController.php',
            'Resources/views/Advanced/customFormTheme.html.twig',
            'Resources/views/Advanced/advanced-theme.html.twig',
        ])
    }}

    {%
        form_theme form
            'FuzAppBundle::jquery.collection.html.twig'
            'FuzAppBundle:Advanced:advanced-theme.html.twig'
    %}

    {{ form(form) }}

    {% for value in data.values %}
        <p>Value : {{ value }}</p>
    {% endfor %}

{% endblock %}

{% block script %}

    <script type="text/javascript">
        $('.collection').collection({
            'add': '<a href="#" class="btn btn-default">Add</a>,',
            add_at_the_end: true
        });
    </script>

{% endblock %}
